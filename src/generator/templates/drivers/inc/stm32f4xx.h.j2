#pragma once

#include "static.h"
#include "stm32f4xx_hal.h"
#include "bus.h"

#include <stdint.h>

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

typedef enum {
{%- for bus in architecture.participation['name']['can'].buses -%}
{%- if bus == 'INVALID_BUS' -%}
  {%- raise "INVALID_BUS is a reserved bus name" -%}
{%- endif %}
  {{ bus }},
{%- endfor %}
	INVALID_BUS
} CAN_Raw_Bus_T;

typedef uint32_t Time_T; // in ms
typedef HAL_StatusTypeDef CANlib_Transmit_Error_T;
typedef HAL_StatusTypeDef CANlib_Init_Error_T;

CANlib_Transmit_Error_T CANlib_TransmitFrame(Frame *frame, CANlib_Bus_T bus);
void CANlib_ReadFrame(Frame *frame, CANlib_Bus_T bus);
Time_T CANlib_GetTick(void);

#ifdef __cplusplus
} // extern "C"
#endif // __cplusplus
