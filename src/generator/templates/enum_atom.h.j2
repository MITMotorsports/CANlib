{%- macro enums(bus, msg, msg_name=msg.name) -%}
{%- if msg.frame is defined -%}
{% for sub_frame in msg.frame -%}
{{ enums(bus, sub_frame, msg_name + '_' + sub_frame.name) }}
{%- endfor -%}
{%- else -%}
{%- for atom in msg.atom -%}
{%- if atom.type.isenum() -%}
typedef enum {
{%- for enum in atom.type.enum -%}
{%- if enum.name == 'NUM_FIELDS' -%}
  {%- raise "Enum name for {{ atom.name }} cannot be NUM_FIELDS" -%}
{%- else %}
  CANlib_{{ bus.name }}_{{ msg_name }}_{{ atom.name }}_{{ enum.name }} = {{ enum.value }},
{%- endif -%}
{%- endfor %}
  CANlib_{{ bus.name }}_{{ msg_name }}_{{ atom.name }}_NUM_FIELDS = {{ atom.type.enum | length }}
} CANlib_{{ bus.name }}_{{ msg_name }}_{{ atom.name }}_T;

{% endif -%}
{%- endfor -%}
{%- endif -%}
{%- endmacro -%}

#pragma once

{% for bus in can.bus -%}
// {{ bus.name }}
{% for msg in bus.frame -%}
  {{ enums(bus, msg) }}
{%- endfor -%}
{%- endfor -%}
